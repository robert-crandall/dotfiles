#!/bin/zsh

exec > >(tee -i $HOME/dotfiles_install.log)
exec 2>&1
set -x

function link_files() {
  # In some codespaces, there's no need to symlink dotfiles to $HOME
  if [[ ! $(pwd) -ef $HOME ]]; then
    ln -s $(pwd)/git/.gitignore_global ~/.gitignore_global
    ln -s $(pwd)/git/.git_template ~/.git_template
    ln -s $(pwd)/tmux/.tmux.conf ~/.tmux.conf
    ln -s $(pwd)/script/git-hooks/pre-push .git/hooks/pre-push

    rm -f ~/.gitconfig
    ln -s $(pwd)/git/.gitconfig ~/.gitconfig

    if [ -d "/workspaces/github/bin" ]; then
      sudo ln -s /workspaces/github/bin/rubocop /usr/local/bin/rubocop
      sudo ln -s /workspaces/github/bin/srb /usr/local/bin/srb
      sudo ln -s /workspaces/github/bin/solargraph /usr/local/bin/solargraph
    fi
  fi
}

function setup_software() {
  # Setup codespace friendly name for shell prompt
  codespace_friendly_name=$(gh api "/user/codespaces/$CODESPACE_NAME" -q .display_name)
  if [[ $? -eq 0 && $codespace_friendly_name != *"Not Found"* ]]; then
    echo $codespace_friendly_name >> $HOME/.friendly_name
  fi

  # Use remote-development-manager for copy/paste and open support
  wget https://github.com/BlakeWilliams/remote-development-manager/releases/download/v0.0.3/rdm-linux-amd64
  sudo mv rdm-linux-amd64 /usr/bin/rdm
  chmod +x /usr/bin/rdm
  gh config set browser "rdm open"

  sudo chsh -s /bin/zsh $(whoami)
  zsh zsh/install.zsh
}

# Most of this setup is for GitHub Codespaces
if [[ -n $CODESPACES ]]; then
  echo 'ðŸš€ Starting Codespaces setup.'
  echo 'ðŸ”— Linking files.'
  echo `date +"%Y-%m-%d %T"`
  link_files

  echo 'ðŸ§° Configuring software'
  echo `date +"%Y-%m-%d %T"`
  setup_software
  echo 'âœ… Done!'
  echo `date +"%Y-%m-%d %T"`
else
  # TODO: Add setup for local machine
  zsh zsh/install.zsh
fi
